# CI build that assembles artifacts and runs tests.
# If validation is successful this workflow releases from the main dev branch.
#
# - skipping CI: add [skip ci] to the commit message
# - skipping release: add [skip release] to the commit message

name: CI

on:
  push:
    branches: ['main']
    tags-ignore: [v*] # release tags are autogenerated after a successful CI, no need to run CI against them
    paths-ignore:
      - 'docs/**'
      - '**.md'
  pull_request:
    branches: ['**']

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - scala-version: 2.11.8
            spark-version: 2.3.0
          - scala-version: 2.11.8
            spark-version: 2.4.3
          - scala-version: 2.12.11
            spark-version: 2.4.3
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    steps:
      - name: Check out code
        # https://github.com/actions/checkout
        uses: actions/checkout@v2
        with:
          # Needed to get all tags. Refer https://github.com/shipkit/shipkit-changelog#fetch-depth-on-ci
          fetch-depth: '0'
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build and test code, and test artifact publishing
        run: ./gradlew build publishToMavenLocal artifactoryPublishAll -s -Partifactory.dryRun -PscalaVersion=$SCALA_VERSION -PsparkVersion=$SPARK_VERSION
        env:
          SCALA_VERSION: ${{ matrix.scala-version }}
          SPARK_VERSION: ${{ matrix.spark-version }}
      - name: Release to Maven Central and LinkedIn Artifactory
        # Release job, only for pushes to the main development branch
        if: github.event_name == 'push'
          && github.ref == 'refs/heads/main'
          && github.repository == 'linkedin/LiFT'
          && !contains(toJSON(github.event.commits.*.message), '[skip release]')
        run: ./gradlew publishToSonatype closeAndReleaseStagingRepository artifactoryPublishAll -s -PscalaVersion=$SCALA_VERSION -PsparkVersion=$SPARK_VERSION
        env:
          SCALA_VERSION: ${{ matrix.scala-version }}
          SPARK_VERSION: ${{ matrix.spark-version }}
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PWD: ${{ secrets.SONATYPE_PWD }}
          PGP_KEY: ${{ secrets.PGP_KEY }}
          PGP_PWD: ${{ secrets.PGP_PWD }}
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_KEY: ${{ secrets.ARTIFACTORY_KEY }}
  github-release:
    runs-on: ubuntu-latest
    needs: build
    # Release job, only for pushes to the main development branch
    if: github.event_name == 'push'
      && github.ref == 'refs/heads/main'
      && github.repository == 'linkedin/LiFT'
      && !contains(toJSON(github.event.commits.*.message), '[skip release]')
    steps:
      - name: Check out code
        # https://github.com/actions/checkout
        uses: actions/checkout@v2
        with:
          # Needed to get all tags. Refer https://github.com/shipkit/shipkit-changelog#fetch-depth-on-ci
          fetch-depth: '0'
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8    
      - name: Release
        run: ./gradlew githubRelease -s
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
